<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="http://ehcache.org/ehcache.xsd">
  <!--
    name:缓存名称。 
    eternal:对象是否永久有效，一但设置了，timeToLiveSeconds和timeToIdleSeconds的设置失效，默认false。 
    timeToLiveSeconds：设置对象在失效前允许存活时间（单位：秒）。最大时间介于创建时间和失效时间之间。仅当eternal=false对象不是永久有效时使用，默认是0，也就是对象存活时间无穷大。 
    timeToIdleSeconds：设置对象在失效前的允许闲置时间（单位：秒）。仅当eternal=false对象不是永久有效时使用，可选属性，默认值是0，也就是可闲置时间无穷大。 
    maxElementsInMemory：内存中缓存的最大个数。 
    overflowToDisk：当内存中对象数量达到maxElementsInMemory时，Ehcache将会对象写到磁盘中，默认false。 
    maxElementsOnDisk：硬盘最大缓存个数。 
    diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区。 
    diskPersistent：存在于磁盘中的缓存是否在虚拟机重启后仍然存在，默认false。 
    diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒。 
    memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。默认策略是LRU（最近最少使用）。你可以设置为FIFO（先进先出）或是LFU（较少使用）。 
    clearOnFlush：内存数量最大时是否清除。
  -->
  <diskStore path="java.io.tmpdir" />

  <defaultCache eternal="false" maxElementsInMemory="1000" overflowToDisk="false" diskPersistent="false"
    timeToIdleSeconds="0" timeToLiveSeconds="600" memoryStoreEvictionPolicy="LRU" />

<!--   <cache name="tableNameCache" maxElementsInMemory="100" eternal="true" overflowToDisk="true" diskPersistent="false" /> -->
  <cache name="ucodeTypeCache" maxElementsInMemory="20" eternal="true" clearOnFlush="true" memoryStoreEvictionPolicy="LFU" />
  <cache name="ucodeCache" maxElementsInMemory="100" eternal="true" clearOnFlush="true" memoryStoreEvictionPolicy="LFU" />
  <cache name="importTerminalCache" timeToIdleSeconds="180" maxElementsInMemory="20" memoryStoreEvictionPolicy="FIFO"/>
  <cache name="exportTerminalCache" timeToIdleSeconds="180" maxElementsInMemory="20" memoryStoreEvictionPolicy="FIFO"/>
  <cache name="batchUpdateTerminalCache" timeToIdleSeconds="180" maxElementsInMemory="20" memoryStoreEvictionPolicy="FIFO"/>
  <cache name="batchUpdateGmhsiCache" timeToIdleSeconds="180" maxElementsInMemory="20" memoryStoreEvictionPolicy="FIFO"/>
  <cache name="exportManualData" timeToIdleSeconds="180" maxElementsInMemory="20" memoryStoreEvictionPolicy="FIFO"/>
  <cache name="importUpdatemdmCache" timeToIdleSeconds="180" maxElementsInMemory="20" memoryStoreEvictionPolicy="FIFO"/>
  <!--该缓存是用来缓存token的，token本身自带超时时间，但token本身的超时时间存在弊端，如果用户一直访问，则达到设定时间之后，依然会强制退出。所以由给token添加了cache，使用ehcache提供的解决这个问题。-->
  <!--ehcache本身存在最大空闲时间的设置参数，如果某一个token一直不被访问，则ehcache将其回收。所以讲用户对应的token存在缓存中，如果缓存用户一直使用系统，则缓存一直被访问，则缓存存在。如果用户一段时间之后不登录，则缓存清空。-->
  <!--如果cache被清空了，则验证切面无法通过，会禁止用户访问。-->
  <!--设置4小时空闲后token清除，如果想要设置用户最长的空闲时间只需要设置timeToIdleSeconds参数即可，但每个token最长的失效时间是24小时，所以如果timeToIdleSeconds设置的时间大于24小时也会由于token本身失效而禁止用户访问。-->
  <cache name="tokenCache" maxElementsInMemory="100" timeToIdleSeconds="14400" eternal="false" clearOnFlush="true" memoryStoreEvictionPolicy="LFU" />
  <cache name="tokenCustomerCache" maxElementsInMemory="10000" timeToIdleSeconds="14400" eternal="false" clearOnFlush="true" memoryStoreEvictionPolicy="LFU" />
</ehcache>